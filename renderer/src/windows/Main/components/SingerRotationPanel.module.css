/* SingerRotationPanel Component Styles */

/* Singer Header */
.singerHeader {
	display: grid;
	grid-gap: 3px;
	padding: 6px;
	color: #6c757d;
	border-bottom: 1px solid rgb(75, 75, 75);
	font-size: 1rem;
	grid-template-columns: 30px auto 120px 30px;
}

/* Singer List Container */
.singerList {
	overflow-y: auto;
	scrollbar-width: none;
	-ms-overflow-style: none;
	height: 100%;
	min-height: 0;
}

.singerList::-webkit-scrollbar {
	display: none;
}

/* Singer Item */
.singerItem {
	display: grid;
	grid-gap: 3px;
	padding: 6px;
	grid-template-columns: 30px auto 120px 30px;
	color: white;
	border-bottom: 1px solid rgb(25, 25, 25);
	background: none;
	border-radius: 0;
	transition: background-color 0.2s;
	position: static;
	overflow: visible;
	cursor: pointer;
	align-items: center;
}

/* Progress Bar Container */
.progressBarContainer {
	display: flex;
	align-items: center;
	justify-content: flex-start;
}

/* Song Progress Bar */
.songProgressBar {
	display: flex;
	align-items: center;
	height: 20px;
	border-radius: 4px;
	overflow: hidden;
	background-color: rgba(255, 255, 255, 0.1);
	min-width: 0;
	flex: 1;
}

/* No Songs Text */
.noSongsText {
	font-size: 0.75rem;
	color: #6c757d;
	font-style: italic;
	padding: 0 4px;
	line-height: 1;
}

/* Song Segment */
.songSegment {
	width: 10px;
	min-width: 2px; /* Minimum width when compressed */
	height: 100%;
	flex-shrink: 1; /* Allow shrinking when container is full */
}

/* Song Segment States */
.songSegmentCompleted {
	background-color: #6c757d; /* Grey for completed */
}

.songSegmentQueued {
	background-color: #28a745; /* Green for queued */
}

.songSegmentPlaying {
	background-color: #ffc107; /* Yellow for playing */
}

/* Ensure draggable items don't show grab cursor everywhere */
.singerItem[draggable="true"] {
	cursor: pointer;
}

.singerItem::before {
	display: none;
}

.singerItem:hover {
	background-color: rgb(25, 25, 25);
	border-color: rgb(25, 25, 25);
	transform: none;
	box-shadow: none;
}

/* Current Singer Highlight */
.singerItem.currentSinger {
	background-color: rgb(25, 25, 25);
	border-color: rgb(25, 25, 25);
	box-shadow: none;
}

.singerItem.currentSinger::before {
	display: none;
}

/* Paused Singer */
.singerItem.pausedSinger {
	color: #dc3545;
	opacity: 0.8;
}

.singerItem.pausedSinger .singerName {
	color: #dc3545;
}

.singerItem.pausedSinger .singerAvatar {
	background: #dc3545;
	color: white;
}

.singerItem.pausedSinger:hover {
	background-color: rgba(220, 53, 69, 0.1);
}

/* Drag and Drop States */
.singerItem.dragging {
	opacity: 0.5;
	transform: scale(0.95);
}

.singerItem.dragOver {
	border-top: 3px solid #0d6efd;
	background-color: rgba(13, 110, 253, 0.1);
}

/* Singer Avatar */
.singerAvatar {
	width: 24px;
	height: 24px;
	border-radius: 50%;
	background: #6c757d;
	display: flex;
	align-items: center;
	justify-content: center;
	font-weight: normal;
	color: white;
	margin-right: 0;
	font-size: 0.8rem;
	box-shadow: none;
	border: none;
	position: static;
	z-index: auto;
}

.currentSinger .singerAvatar {
	background: #ffc107;
	color: #000;
	box-shadow: none;
}

/* Singer Name */
.singerName {
	font-weight: normal;
	font-size: 1rem;
	margin-bottom: 0;
	color: white;
	text-shadow: none;
}

/* Show on Hover */
.showOnHover {
	visibility: hidden;
}

.singerItem:hover .showOnHover {
	visibility: visible;
}

/* Drag Handle */
.dragHandle {
	cursor: grab;
	padding: 2px;
	border-radius: 3px;
	transition: background-color 0.2s;
	user-select: none;
}

.dragHandle:hover {
	background-color: rgba(255, 255, 255, 0.1);
}

.dragHandle[draggable="true"]:active {
	cursor: grabbing;
}

/* Empty Singers State */
.emptySingers {
	padding: 20px;
	text-align: center;
	color: #6c757d;
	font-style: italic;
}

.emptySingers p {
	margin: 5px 0;
}

.emptySingers p:first-child {
	font-weight: bold;
	color: #adb5bd;
}

/* Responsive Styles */
@media (max-width: 1300px) {
	.singerItem,
	.singerHeader {
		grid-gap: 2px;
		padding: 5px;
		grid-template-columns: 25px auto 100px 30px;
		font-size: 12px;
	}

	.emptySingers {
		padding: 15px;
		font-size: 11px;
	}
}
